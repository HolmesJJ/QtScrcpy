name: MacOS
on: 
  push:
    paths:
      - 'QtScrcpy/**'
      - '!QtScrcpy/res/**'
      - '.github/workflows/macos.yml'
  pull_request:
    paths:
      - 'QtScrcpy/**'
      - '!QtScrcpy/res/**'
      - '.github/workflows/macos.yml'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        qt_ver: [5.12.6]
        qt_arch: [clang_64]
    env:
      targetName: QtScrcpy
    steps:
      - name: Cache Qt
        id: MacosCacheQt
        uses: actions/cache@v1
        with:
          path: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
          key: ${{ runner.os }}-Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
      - name: Setup Qt
        if: steps.MacosCacheQt.outputs.cache-hit == 'true'
        shell: pwsh
        env:
          QtPath: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
        run: |
          $qt_Path=${env:QtPath}
          echo "::set-env name=Qt5_Dir::$qt_Path"
          echo "::add-path::$qt_Path/bin"    
      - name: Install Qt
        if: steps.MacosCacheQt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v2.0.0
        with:
          version: ${{ matrix.qt_ver }}
      
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      # 编译
      - name: Build MacOS
        run: |
          export ENV_QT_CLANG=$(pwd)/${{env.Qt5_Dir}}
          ci/mac/build_for_mac.sh release
      # 发布
      - name: Publish
        if: startsWith(github.event.ref, 'refs/tags/')
        run: |
          export ENV_QT_CLANG=$(pwd)/${{env.Qt5_Dir}}
          ci/mac/publish_for_mac.sh ../build
          ci/mac/package_for_mac.sh
      # tag 打包
      - name: Package
        if: startsWith(github.event.ref, 'refs/tags/')
        shell: pwsh
        env:
          ref: ${{ github.event.ref }}
        run: |
          [string]$tag = ${env:ref}.Substring(${env:ref}.LastIndexOf('/') + 1)
          [string]$name = 'QtScrcpy-mac-x64-' + ${tag}
          # 打包zip
          Compress-Archive -Path ci\build\QtScrcpy.dmg ci\build\${name}.zip

          # 记录环境变量packageName给后续step
          echo "::set-env name=packageName::$name"
          # 打印环境变量packageName
          Write-Host 'packageName:'${env:packageName}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ci/build/${{ env.packageName }}.zip
          name: ${{ env.packageName }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}